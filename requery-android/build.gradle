buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 25
    buildToolsVersion "$android_buildtools_version"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'proguard-rules.pro'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    compile project(':requery')
    compile 'com.android.support:support-v4:25.0.0'
    compile 'com.android.support:recyclerview-v7:25.0.0'
    compile 'net.zetetic:android-database-sqlcipher:3.5.1'
    compile 'io.requery:sqlite-android:3.14.1'
    androidTestCompile project(':requery-test')
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
}

publish.dependsOn 'assembleRelease'
bintrayUpload.dependsOn 'assembleRelease'

android.libraryVariants
publishing {
    publications {
        maven(MavenPublication) {
            // leaving out dependencies (components.java) intentionally
            groupId rootProject.group
            artifactId project.name
            version rootProject.version
            artifact getReleaseArtifact()
            artifact sourcesJar
            artifact javadocJar
            pom.withXml {
                asNode().children().last() + project.pomXml
            }
        }
    }

    repositories {
        maven {
            credentials {
                username = bintray.user
                password = bintray.key
            }
            url 'http://oss.jfrog.org/artifactory/oss-snapshot-local'
        }
    }
}

def getReleaseArtifact() {
    return "build/outputs/aar/${project.name}-release.aar"
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
    failOnError false;
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
